{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./public/javascripts/compress.js","webpack:///./node_modules/dom-to-image/src/dom-to-image.js","webpack:///./public/javascripts/produce/produce.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","img","src","length","ratio","count","width","height","Math","sqrt","canvas","ctx","fillStyle","fillRect","nw","nh","tCanvas","j","tctx","drawImage","ndata","toDataURL","global","util","escape","string","replace","parseExtension","mimeType","url","extension","toLowerCase","WOFF","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","dataAsUrl","content","type","isDataUrl","search","canvasToBlob","toBlob","Promise","resolve","binaryString","window","atob","split","binaryArray","Uint8Array","charCodeAt","Blob","resolveUrl","baseUrl","doc","document","implementation","createHTMLDocument","base","createElement","head","appendChild","a","body","href","getAndEncode","TIMEOUT","domtoimage","impl","options","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","open","send","imagePlaceholder","message","console","error","uid","index","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","push","escapeXhtml","makeImage","uri","reject","image","Image","onload","onerror","node","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","shouldProcess","then","readUrls","urls","done","forEach","inline","filter","data","dataUrl","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","map","webFont","cssStrings","join","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","style","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","background","inlined","setProperty","getPropertyPriority","inlineBackground","HTMLImageElement","newImage","childNodes","child","element","newImages","defaultOptions","undefined","toSvg","toPng","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","root","HTMLCanvasElement","cloneNode","clone","original","children","parent","childClone","cloneChildrenInOrder","cloneChildren","source","target","copyProperties","className","styleElement","selector","formatCssText","formatCssProperties","createTextNode","formatPseudoElementStyle","clonePseudoElement","HTMLTextAreaElement","innerHTML","HTMLInputElement","setAttribute","SVGElement","SVGRectElement","attribute","getAttribute","processClone","embedFonts","inlineImages","bgcolor","backgroundColor","keys","XMLSerializer","serializeToString","xhtml","foreignObject","makeSvgDataUri","domNode","newCanvas","makeNodeCopy","copyStyle","cloneStyle","clonePseudoElements","formatProperty","copyUserInput","fixSvg","styleNode","words","word","num","len","arr","sort","$","ready","headimgurl","localStorage","getItem","alert","location","attr","text","append","each","key","find","remove","imgurl","setMyimg","querySelector","nimg","css","position","top","opacity"],"mappings":"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","file":"produce.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export default function compress(img) {\r\n    var initSize = img.src.length;\r\n    var width = img.width;\r\n    var height = img.height;\r\n    //如果图片大于四百万像素，计算压缩比并将大小压至400万以下\r\n    var ratio;\r\n    if ((ratio = width * height / 4000000) > 1) {\r\n        ratio = Math.sqrt(ratio);\r\n        width /= ratio;\r\n        height /= ratio;\r\n    } else {\r\n        ratio = 1;\r\n    }\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    //        铺底色\r\n    ctx.fillStyle = \"#fff\";\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    //如果图片像素大于100万则使用瓦片绘制\r\n    var count;\r\n    if ((count = width * height / 1000000) > 1) {\r\n        count = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\r\n        //            计算每块瓦片的宽和高\r\n        var nw = ~~(width / count);\r\n        var nh = ~~(height / count);\r\n        tCanvas.width = nw;\r\n        tCanvas.height = nh;\r\n        for (var i = 0; i < count; i++) {\r\n            for (var j = 0; j < count; j++) {\r\n                tctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh);\r\n                ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\r\n            }\r\n        }\r\n    } else {\r\n        ctx.drawImage(img, 0, 0, width, height);\r\n    }\r\n    //进行最小压缩\r\n    var ndata = canvas.toDataURL('image/jpeg', 0.1);\r\n    tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\r\n    return ndata;\r\n}","(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n","import domtoimage from 'dom-to-image';\r\nimport compress from '../compress';\r\n\r\nfunction dti() {\r\n    var node = document.querySelector('body');\r\n    domtoimage.toPng(node)\r\n        .then(function(dataUrl) {\r\n            var nimg = new Image();\r\n            nimg.src = dataUrl;\r\n            $('.container').append(nimg);\r\n            $(nimg).css({\r\n                position: 'absolute',\r\n                top: '0',\r\n                opacity: '0'\r\n            });\r\n        });\r\n}\r\n\r\nvar words = [{\r\n    word: '时光荏苒，今年的栀子花又来了！毕业遥遥无期，眼就各奔东西。'\r\n}, {\r\n    word: '学子即将成校友！愿此去繁花似锦，归来仍是邮子。'\r\n}, {\r\n    word: '愿走过天梯的你，无畏泥泞，扬帆星辰大海！'\r\n}, {\r\n    word: '告别八教的凌霄，却终怀凌云志。'\r\n}, {\r\n    word: '今日，目送你日渐强壮丰满的羽翼；未来，在彼此都看不到的岁月里熠熠生辉！'\r\n}, {\r\n    word: '以德修身，以礼待人。道德一直是国人做人的基础，礼貌不仅是你人品的大标签，更是新世纪素质修养的表现。'\r\n}, {\r\n    word: '学海无涯，求学路远。知识永远是你坚硬的后盾，好学则是铺路石。愿你持初心，爱求索，勿忘用知识来充盈自己。'\r\n}, {\r\n    word: '实践是检验真理的唯一标准。是非对错往往困扰我们前行的道路，我们应该在实践中求证真理真确与否。'\r\n}, {\r\n    word: '空气可以排除，光源可以被阻挡，但思维往往无所可以禁锢。活跃的思维是人生的财富，创新推动社会的进步。'\r\n}, {\r\n    word: '莘莘学子，母校见证了你们从稚嫩走向成熟的蜕变，愿你们谨记校训，前程似锦，带着梦想扬帆起航。'\r\n}, {\r\n    word: '修德。德性是行走社会的准则。毕业，其实你的人生才刚刚开始。'\r\n}, {\r\n    word: '博学。校园之外是更广阔的书山学海，坚持不懈地汲取才能博学明理。'\r\n}, {\r\n    word: '求实，纯真岁月渐行渐远，求实之路道阻且长。即将远行的邮子们，加油！'\r\n}, {\r\n    word: '创新。展翅高飞时，请带上追梦的初心和创新的执着。'\r\n}, {\r\n    word: '热情，过去的四年是学术的积淀，是热情的蓄力，不忘初心，砥砺前行。'\r\n}, {\r\n    word: '吻过暖春的落樱，以金秋银杏作伴。春华秋实，我们的故事未完待续。'\r\n}, {\r\n    word: '没有雨红莲上的欢声笑语，你也要笑对未来；没有情人坡上的柔情蜜意，你也过得甜蜜蜜。'\r\n}, {\r\n    word: '没有校车送你到目的地，你也要为梦奔跑；没有南部校区的实验楼，你也要坚持追求真理。'\r\n}, {\r\n    word: '就算没有备好三餐等你的中心食堂，也不要忘记准点吃饭。就算没有聚餐圣地堕落街，也不要和我断了联系。'\r\n}, {\r\n    word: '告别图书馆的香氛书页，也不要停止汲取知识的芬芳。邮子们，望一愿名成就，不负流年逝！'\r\n}, {\r\n    word: '即将远行的邮子，这些年母校见证了你从稚嫩到成熟的蜕变。愿你谨记校训，为梦起航！'\r\n}]\r\n\r\n\r\nfunction check() {\r\n    if ((localStorage.getItem('username') == undefined) || (localStorage.getItem('img') == undefined)) {\r\n        alert('请完善信息');\r\n        $(location).attr('href', '/')\r\n    }\r\n}\r\n\r\nfunction setToname() {\r\n    var name = localStorage.getItem(\"username\");\r\n    $('.toName').text(name);\r\n}\r\n\r\nfunction setheadimg(){\r\n    var headimgurl = localStorage.getItem(\"headimgurl\");\r\n    var node = document.createElement('img');\r\n    $(node).attr({\r\n        src: headimgurl\r\n    })\r\n    $('.headPic').append(node);\r\n}\r\n\r\nfunction setMyimg() {\r\n    var node = document.createElement('img');\r\n    var imgurl = localStorage.getItem(\"img\");\r\n    $(node).attr({\r\n        src: imgurl\r\n    })\r\n    $('.myPhoto').append(node);\r\n}\r\n\r\nfunction random(num, len) {\r\n    var arr = [];\r\n    for (var i = 0; i <= num; i++) {\r\n        arr.push(i);\r\n    }\r\n    arr.sort(\r\n        function() {\r\n            return 0.5 - Math.random();\r\n        }\r\n    );\r\n    arr.length = len;\r\n    return arr;\r\n}\r\n\r\nfunction setSentence() {\r\n    var num = random(20, 1)[0];\r\n    var word = words[num].word;\r\n    $('.sentence').text(word);\r\n}\r\n\r\nfunction setImg() {\r\n    var arr = random(19, 9);\r\n    $.each(arr, function(key, value) {\r\n        var node = document.createElement('img');\r\n        $(node).attr({\r\n            src: './images/' + arr[key] + '.png'\r\n        });\r\n        $('.photoItem')[key].append(node);\r\n    })\r\n    $('.myPhoto').find('img').remove();\r\n\r\n}\r\n\r\n$(document).ready(function(){\r\n    check();\r\n    setToname();\r\n    setheadimg();\r\n    setImg();\r\n    setMyimg();\r\n    setSentence();\r\n})\r\n\r\n\r\nwindow.onload = dti();"],"sourceRoot":""}